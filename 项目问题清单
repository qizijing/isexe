# 问题清单

读程序大作业答辩问题清单。

## 说明

1. 本问题清单仅是一个参考资料  
2. 本清单的作用是帮助自己带着问题去读程序，使自己有一个更好的学习效果  
2. 不保证答辩时所有的问题都在清单上  
3. 不保证答辩时问题的顺序和清单上的一致  

## 术语

1. 项目：就是学生选题，进行代码阅读的 GitHub 上的某个代码仓库  
2. 成果：就是完成代码阅读后，整理的文档资料  
3. 数据结构：数据结构课上学到的各种 ADT 
4. 设计模式：四人帮的二十三种设计模式  
5. 算法：问题求解的方法  

## 清单

- 成果仓库是否创建，仓库名称是什么？  
- README.md 文档是否翻译？  
- 是否撰写 MarkDown 文档来记录自己代码阅读的收获？  
- 通过代码阅读，自己学到了什么？  
- 项目的功能是什么？  
- 请展示项目功能或者运行项目（不同项目类型，运行方式不同）。  
- 程序中的注释是否翻译？  
- 是否在程序中补充注释？补充注释的理由是什么？不补充注释的理由是什么？  
- 项目类型是什么？（命令行程序、web 网站、第三方库、其他，如果是其他项目类型，请给出项目类型的具体名称）  
- 项目的入口文件是哪个？ 
    - 开发者可在package.json中通过main指定入口文件，例如：
   
```
{
    "main": "index.js"//这个项目的入口文件就是index.js
}
```

- 项目的依赖项有哪些，各个依赖项都是做什么，有什么功能？  
- 项目有哪些代码模块？各个代码模块之间有什么关联性？  
- 代码模块中有哪些函数？各个函数都是做什么的？  
- 项目中的数据结构有哪些种类？功能作用是什么？  
- 项目中的算法有哪些种类？功能作用是什么？  
- 项目中的设计模式有哪些种类？功能作用是什么？  
- 项目中使用了哪些高级的 JavaScript 语法？  
- 代码中哪一个或几个函数的代码比较难于理解？你搞明白了吗？你认为难点是什么？  
- 项目中用到自动化测试吗？用到自动化测试框架了吗？用的是哪个自动化测试框架？  
- 项目中所有的模块都有单元测试吗？哪些有？哪些没有？这样安排的理由是什么？  
- 项目中是否用到持续集成？持续集成做了哪些事情？  
- 仓库根目录都有哪些文件？每个文件的作用都是什么？  
- 代码中是否有 bug？  
- 代码中是否有可以改进的地方？  
- 如果代码中有 bug 或可以改进的地方，你给项目贡献代码了吗？  
- 项目是如何划分模块、划分函数的，划分的好吗？如果是你，你会怎么做？  
- 代码的可读性如何？结构清晰吗？编码风格如何？  
- 你是否调试运行过项目？通过调试运行，你搞明白了哪些问题？如果没有调试运行，说出不调试运行项目的理由。  
- 你是否把项目代码做了拆解，比如，把某个函数复制出来，放到一个单独的代码文件中，进行研究？这么做的目的是什么，收获到什么？不这么做的理由是什么？  
- 阅读源代码的整个过程中，你的内心状态如何？如果有心理上的障碍，你是如何克服的？ 
